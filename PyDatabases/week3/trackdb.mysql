-- trackdb.mysql
-- note: made all 'text' fields into 'varchar(128)' to allow for unique compatibility with mysql
-- note: added relations to more fully describe db as shown in lectures

-- for future ref: drop tables in order from root to leaves, otherwise foreign key constraints won't allow you to delete
drop table if exists track;
drop table if exists genre;
drop table if exists album;
drop table if exists artist;

-- create tables in order from leaves to root
create table artist (
    id int not null auto_increment,
    name varchar(128),
    primary key (id),
    unique (name)
); 

-- foreign keys go from root -> leaf, or parent -> child
create table album (
    id int not null auto_increment,
    title varchar(128),
    artist_id integer,
    primary key (id),
    unique (title),
    -- unique (artist_id, title), # example of unique on a combination of columns
    foreign key (artist_id) references artist(id)
    -- constraint fk_full_example foreign key (artist_id) references artist(id) on delete cascade on update cascade
    -- previous line is fuller example, defining constraint name and cascading options
);

create table genre (
    id int not null auto_increment,
    genre varchar(128),
    primary key (id),
    unique (genre)
);

create table track (
    id int not null auto_increment,
    title varchar(128),
    rating integer,
    len integer,
    count integer,
    album_id integer,
    genre_id integer,
    primary key (id),
    unique (title),
    foreign key (album_id) references album(id)
);

-- alternate way of specifying a foreign key, if the table already exists
alter table track
    add constraint track_ibfk_2 foreign key (genre_id) references genre(id)
    on delete cascade on update cascade;